# prerequisites  
- name: Install requisite package
  shell: |
    apt install build-essential python3-setuptools
    pip3 install minimum
  when: ansible_os_family == "Debian"

- name: Install requisite package
  shell: |
    yum groupinstall "Development Tools" -y
    yum install python3 -y
  when: ansible_os_family == "RedHat" 

# download and run install.py
- name: Download install.py
  get_url:
    url: wget https://raw.githubusercontent.com/frappe/bench/develop/install.py
    dest: /tmp/install.py

- name: Run install.py
  shell: |
    export LC_ALL=C.UTF-8
    cd /tmp;
    sudo python3 install.py --production  \
    --version {{erpnext_version}} \
    --python {{erpnext_python_version}} \
    --mysql-root-password {{erpnext_mysql_root_password}} \
    --admin-password {{erpnext_admin_password}} \
    --site {{erpnext_site_name}}

# create link
- name: Create link
  file:
    src: '{{item.src}}'
    dest: '{{item.dest}}'
    state: link
  with_items:
    - {src: /home/frappe/frappe-bench/apps/erpnext,dest: /data/wwwroot}
    - {src: /home/frappe/frappe-bench/apps/frappe,dest: /data/wwwroot}
    - {src: /home/frappe/frappe-bench/config/,dest: /data/config}
    - {src: /home/frappe/frappe-bench/logs/,dest: /data/logs}
    
# Check version,
- block:
  - name: Check erpnext Version
    shell: sudo echo "erpnext version:" {{erpnext_version}} | tee -a /data/logs/install_version.txt

  - name: Check nginx Version
    shell: sudo echo $(nginx -v) |sudo tee -a /data/logs/install_version.txt

  - name: Check mariadb Version
    shell: sudo echo  $(mysql -V) |sudo tee -a /data/logs/install_version.txt

  - name: Check redis Version
    shell: sudo echo $(redis-server -v |awk '{print $1,$2,$3}') |sudo tee -a /data/logs/install_version.txt

  - name: Check node.js Version
    shell: sudo echo "node.js version:" $(nodejs -v) |sudo tee -a /data/logs/install_version.txt
  
  - name: Check bench Version
    shell: sudo echo "bench version:" $(su frappe -c "export GIT_PYTHON_REFRESH=quiet && bench --version |egrep 5") | tee -a /data/logs/install_version.txt

# check service state
- name: Check nginx Service
  shell: systemctl status {{item}} | grep Active*
  register: check_nginx_service
  notify: check_nginx_service
  
- name: Check mariadb Service
  shell: systemctl status mysqld | grep Active*
  register: check_mariadb_service
  notify: check_mariadb_service

- name: Check redis Service
  shell: systemctl status redis | grep Active*
  register: check_redis_service
  notify: check_redis_service

